package com.turingpoint.dbmodel.db.persister;


import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;
import org.hibernate.type.LongType;

import com.turingpoint.dbmodel.db.mapping.Student;
import com.turingpoint.dbmodel.db.mapping.User;
import com.turingpoint.dbmodel.db.mapping.HibernateUtil;
import com.turingpoint.dbmodel.db.mapping.Lecture;

public class StudentPersister extends HibernateUtil{
	
	public Student addStudentToClass(Long userId, Long classId){
		Student student = new Student();
		student.setId(classId, userId);
		return student.save();
	}
	
	//Written by Tony, if it breaks something , blame him <<-- comment also by tony
	@SuppressWarnings("unchecked")
	public static List<Object[]> getCourseStudents(Long classId)
	{
		Session session = null;
	    try{
	        session = getSession();
			//Query studentQuery = session.createSQLQuery("SELECT userId FROM Student  WHERE classId = " + classId);
			String enrolledStudentQueryString = "SELECT userId FROM Student WHERE classId = " + classId;
			String fullQueryString = "SELECT u.userId, u.fName, u.lName " +
									 "FROM User u INNER JOIN ("+enrolledStudentQueryString+") s " +
									 "ON u.userId = s.userId " + 
									 "ORDER BY u.lName ";
			Query studentQuery = session.createSQLQuery(fullQueryString);
			return studentQuery.list();
	      } finally {
	        session.close();
	      }
	}
	
}
